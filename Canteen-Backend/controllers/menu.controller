// controllers/menu.controller.js
const MenuItem = require('../models/menu.model');

// Create new menu item
exports.createMenuItem = async (req, res) => {
    try {
        const menuItem = new MenuItem(req.body);
        await menuItem.save();
        res.status(201).json(menuItem);
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error creating menu item'
        });
    }
};

// Get all menu items
exports.getAllMenuItems = async (req, res) => {
    try {
        const { category, isAvailable } = req.query;
        let query = {};
        
        // Filter by category if provided
        if (category) {
            query.category = category;
        }
        
        // Filter by availability if provided
        if (isAvailable !== undefined) {
            query.isAvailable = isAvailable === 'true';
        }
        
        const menuItems = await MenuItem.find(query).sort({ category: 1, name: 1 });
        res.json(menuItems);
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error fetching menu items'
        });
    }
};

// Get menu item by ID
exports.getMenuItemById = async (req, res) => {
    try {
        const menuItem = await MenuItem.findById(req.params.id);
        if (!menuItem) {
            return res.status(404).json({ message: 'Menu item not found' });
        }
        res.json(menuItem);
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error fetching menu item'
        });
    }
};

// Update menu item
exports.updateMenuItem = async (req, res) => {
    try {
        const menuItem = await MenuItem.findByIdAndUpdate(
            req.params.id,
            req.body,
            { new: true, runValidators: true }
        );
        if (!menuItem) {
            return res.status(404).json({ message: 'Menu item not found' });
        }
        res.json(menuItem);
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error updating menu item'
        });
    }
};

// Delete menu item
exports.deleteMenuItem = async (req, res) => {
    try {
        const menuItem = await MenuItem.findByIdAndDelete(req.params.id);
        if (!menuItem) {
            return res.status(404).json({ message: 'Menu item not found' });
        }
        res.json({ message: 'Menu item deleted successfully' });
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error deleting menu item'
        });
    }
};

// Toggle menu item availability
exports.toggleAvailability = async (req, res) => {
    try {
        const menuItem = await MenuItem.findById(req.params.id);
        if (!menuItem) {
            return res.status(404).json({ message: 'Menu item not found' });
        }
        
        menuItem.isAvailable = !menuItem.isAvailable;
        await menuItem.save();
        
        res.json(menuItem);
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error toggling availability'
        });
    }
};

// Get menu items by category
exports.getMenuByCategory = async (req, res) => {
    try {
        const { category } = req.params;
        const menuItems = await MenuItem.find({ 
            category,
            isAvailable: true 
        }).sort({ name: 1 });
        
        res.json(menuItems);
    } catch (error) {
        res.status(500).json({ 
            error: error.message,
            message: 'Error fetching menu items by category'
        });
    }
};
